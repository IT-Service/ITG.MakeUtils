% \iffalse meta-comment
%
% Copyright (c) 2015 by Sergey S. Betke <sergey.s.betke@yandex.ru>
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3c
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
% 
% The Current Maintainer of this work is Sergey S. Betke.
%
% \fi
%
% \iffalse
%
%<*driver|package-header>
\RequirePackage{expl3}[2014/09/15]
%<*package-header>
%\@ifpackagelater{expl3}{2014/09/15}
%  {}
%  {%
%    \PackageError{gost2-304}{Support package l3kernel too old}
%      {%
%        Please install an up to date version of l3kernel\MessageBreak
%        using your TeX package manager or from CTAN.\MessageBreak
%        \MessageBreak
%        Loading gost2-304 will abort!%
%      }%
%    \endinput
%  }
%</package-header>
% \fi
\def\ExplFileName{gost2-304}
\def\ExplFileDescription{ГОСТ 2.304-81 ЕСКД. Шрифты чертежные}
% \iffalse
%</driver|package-header>
%
%<*driver>
\input{../../obj/version.tex}
\ProvidesFile{\ExplFileName.dtx}
  [\ExplFileDate\space v\ExplFileVersion\space\ExplFileDescription]
\documentclass[a4paper,oneside,full]{l3doc}

\usepackage
  [
    mainfontsize = 3.5mm,
    % zero = slashed,
    % digit-three = alternative,
    roman-V = serif,
    fractions = On,
    math
  ]
  {gost2-304}

\usepackage[russian]{babel}
\usepackage[useregional]{datetime2}
\usepackage{interfaces}
\usepackage{tikz}
\usepackage{interfaces-tikz}
\usepackage{xfrac}
\usepackage{nicefrac}
\usepackage{todo}

\ExplSyntaxOn
\cs_new_nopar:Npn \date_TeX_to_ISO:w #1/#2/#3 \q_stop
  {
    #1-#2-#3
  }
\cs_new_nopar:Nn \date_TeX_to_ISO:n
  {
    \exp_after:wN \date_TeX_to_ISO:w #1 \q_stop
  }
\cs_set_eq:NN \dateTeXtoISO \date_TeX_to_ISO:n
\ExplSyntaxOff

\NewDocumentCommand \DrawChars {m O{15mm} O{14mm}} {
  {
    \noindent
    \eskdfontsize{#3} 
    \begin{tikzpicture}
    \papergraduate [xrule=false] (-5mm,0mm) (125mm,#2);
    \node at (0mm,0mm) [anchor=south west,inner sep=0pt,outer sep=0pt]
      {
        #1
      };
    \end{tikzpicture}
  }
}

\input{../../obj/version.tex}
\edef\ExplFileDateISO{\dateTeXtoISO{\ExplFileDate}}

\DeclareRobustCommand \pkg {\textbf}
\DeclareRobustCommand \thispkg {\pkg{\ExplFileName}}
\newcommand{\opt}[1]{\mbox{\texttt{#1}}}
\newcommand{\mainopt}[1]{\mbox{\textbf{#1}}}
\providecommand{\figureversion}[1]{}

\EnableCrossrefs
\PageIndex
\CodelineIndex

\RecordChanges
\def\ChangesHistory{История изменений}
\GlossaryPrologue{%
  \section{\ChangesHistory}%
  \markboth{\ChangesHistory}{\ChangesHistory}%
}

\begin{document}
  \DisableImplementation
  \DocInput{\jobname.dtx}
  \EnableImplementation
  \DisableDocumentation
  \DocInputAgain
  %\PrintChanges
  \todos
\end{document}
%</driver>
%
% \fi
%
% \CheckSum{0}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
% \begin{documentation}
%
% \changes{v1.0}{2015/02/23}{Первоначальная версия}
%
% \title{Пакет~\thispkg\thanks{Версия \ExplFileVersion, \DTMdate{\ExplFileDateISO}. }\\\ExplFileDescription}
% \author{\ExplFileAuthor \\ \ExplFileAuthorEmail}
% \date{\DTMdate{\ExplFileDateISO}}
% \maketitle
%
% \begin{abstract}
%
% Пакет \thispkg{} позволяет использовать в документах \LaTeX\,
% шрифты eskdfont - чертёжные шрифты по ГОСТ~2.304-81.
% В состав пакета входят как True Type шрифты, так и Open Type.
%
% \end{abstract}
%
% \newpage
% \tableofcontents
% \newpage
%
% \section{Введение}
%
% Версия \ExplFileVersion\, пакета содержит только шрифты с начертанием типа~А.
% Шрифты с начертанием типа~Б запланированы в последующих версиях пакета.
%
% Для использования в документах \LaTeX\, включите команду
% \begin{quote}
%   |\usepackage|\oarg{options}|{gost2-304}|
% \end{quote}
% в преамбулу документа.
% О возможных опциях читайте в разделе~\ref{sec:options}.
%
% \end{documentation}
% \begin{implementation}
% \newpage
% \section{Реализация}
%
% \iffalse
%<*package>
% \fi
%    \begin{macrocode}
%<@@=eskdfont>
\ProvidesExplPackage
  {\ExplFileName}{\ExplFileDate}{\ExplFileVersion}{\ExplFileDescription}
%    \end{macrocode}
% \end{implementation}
% \begin{documentation}
%
% \section{Взаимосвязь с другими пакетами}
%
% Пакет \thispkg{} построен на базе пакета \pkg{fontspec}
% с использованием синтаксиса \LaTeX3.
% \end{documentation}
% \begin{implementation}
%    \begin{macrocode}
\RequirePackage{l3keys2e}
%    \end{macrocode}
% \end{implementation}
%
% \begin{documentation}
% \section{Идентификаторы шрифтов}
%
% Пакет \thispkg{} определяет основной шрифт \DescribeMacro{\eskdfont}\cs{eskdfont}
% и математический шрифт \cs{eskdfont}, а также NFSS семейства
% шрифтов \DescribeMacro{\eskdfontfamily}\cs{eskdfontfamily}.
% \end{documentation}
% \begin{implementation}
% \begin{variable}{\eskdfont}
% Идентификатор основного шрифта \cs{eskdfont}
% и математического шрифта \cs{eskdfont}
%    \begin{macrocode}
\tl_const:Nn \c_@@_mainfont_tl {eskdfont}
\tl_const:Nn \c_@@_mathfont_tl {eskdfont}
%    \end{macrocode}
% \end{variable}
% \begin{variable}{c_@@_mainfont_NFSSFamily_tl, c_@@_mathfont_NFSSFamily_tl}
% Идентификатор NFSS семейства шрифтов \cs{eskdfontfamily}
%    \begin{macrocode}
\tl_const:Nn \c_@@_mainfont_NFSSFamily_tl {eskdfontfamily}
\tl_const:Nn \c_@@_mathfont_NFSSFamily_tl {eskdfontfamily}
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\c_@@_math_version_tl}
% Идентификатор версии математики со шрифтом ГОСТ~2.304.
%    \begin{macrocode}
\tl_const:Nn \c_@@_math_version_tl {eskd}
%    \end{macrocode}
% \end{variable}
% \end{implementation}
% \begin{documentation}
% \section{Доступные размеры шрифтов}
%
% \DescribeMacro{\c_@@_fontsizes_clist}
% Ряд размеров шрифтов |h| определён ГОСТ~2.304.
% При попытке использования других размеров, будет выбран
% ближайший, но меньший указанного, из ряда.
% По п.3.3 ГОСТ~2.105 высота шрифта |h| не менее 2,5~мм,
% тем не менее доступен и |h|=1,8~мм - для формул (индексов, прочего).
%
% \end{documentation}
% \begin{implementation}
% \begin{variable}{\c_@@_fontsizes_clist}
% Ряд допустимых размеров шрифтов |h|.
%
%    \begin{macrocode}
\clist_const:Nn \c_@@_fontsizes_clist {
  1.8mm, 2.5mm, 3.5mm, 5mm, 7mm, 10mm, 14mm, 20mm, 28mm, 40mm
}
%    \end{macrocode}
% \end{variable}
% \end{implementation}
%
% \begin{documentation}
% \end{documentation}
% \begin{implementation}
% 
% Предикат |\g_@@_mainfontsize_bool| используется для определения, установлен ли
% размер основного шрифта
% в опциях пакета и используется ли шрифт \cs{eskdfont} как основной по умолчанию.
% Устанавливается опцией |mainfontsize|.
%    \begin{macrocode}
\bool_new:N \g_@@_mainfontsize_bool
\bool_gset_false:N \g_@@_mainfontsize_bool
%    \end{macrocode}
%
% Переменные, хранящие абсолютное значение размеров шрифта для относительных
% размеров, вычисляемые исходя из |mainfontsize|.
%    \begin{macrocode}
\dim_new:N \g_@@_normalsize_dim
\dim_new:N \g_@@_small_dim
\dim_new:N \g_@@_footnotesize_dim
\dim_new:N \g_@@_scriptsize_dim
\dim_new:N \g_@@_tiny_dim
\dim_new:N \g_@@_large_dim
\dim_new:N \g_@@_Large_dim
\dim_new:N \g_@@_LARGE_dim
\dim_new:N \g_@@_huge_dim
\dim_new:N \g_@@_Huge_dim
%    \end{macrocode}
%
% Переменные для хранения значений опций.
% Подробнее - при описании опций.
%    \begin{macrocode}
\tl_new:N \g_@@_language_tl
\bool_new:N \g_@@_slashed_zero_bool
\bool_gset_false:N \g_@@_slashed_zero_bool
\tl_new:N \g_@@_digit_three_variant_tl
\tl_new:N \g_@@_roman_V_variant_tl
\bool_new:N \g_@@_romannumeral_check_bool
\bool_gset_false:N \g_@@_romannumeral_check_bool
\tl_new:N \g_@@_fractions_tl
\bool_new:N \g_@@_math_support_bool
\bool_gset_false:N \g_@@_math_support_bool
%    \end{macrocode}
%
%    \begin{macrocode}
\cs_generate_variant:Nn \dim_to_decimal_in_unit:nn { cn }
%    \end{macrocode}
%
% Сообщения пакета
%    \begin{macrocode}
\msg_new:nnn { gost2-304 } { mainfont }
  {
    Set~ eskdfont~ as~ main~ font.
  }
\msg_new:nnn { gost2-304 } { invalid-font-size }
  {
    The~ font~ size~ "#1"~ is~ invalid.~
    Valid~ eskd~ font~ sizes:~
    \clist_use:Nn \c_@@_fontsizes_clist {,~ }.
  }
\msg_new:nnn { gost2-304 } { invalid-mainfontsize }
  {
    Invalid~ "mainfontsize"~ value~ "#1".
  }
\msg_new:nnn { gost2-304 } { set-font-size }
  {
    Set~ "#1"~ font~ size~ to~
    \dim_to_decimal_in_unit:cn {g_@@_#1_dim} {1mm}~mm.
  }
%    \end{macrocode}
% \end{implementation}
% \begin{documentation}
%
% \section{Опции пакета}\label{sec:options}
%
% Пакет \thispkg{} предоставляет ряд опций, определяющих размеры шрифта,
% его начертание, применение.
%
% \end{documentation}
% \begin{implementation}
% Опции пакета
%    \begin{macrocode}
\keys_define:nn { gost2-304 }
  {
%    \end{macrocode}
% \end{implementation}
% \begin{documentation}
%
% \subsection{mainfontsize}
% \label{opt:mainfontsize}
%
% \DescribeOption{mainfontsize}
% Использование пакета \thispkg{} без опции |mainfontsize|
% лишь определяет шрифты \cs{eskdfont} для их дальнейшего явного использования.
%
% При указании опции |mainfontsize|, например, так:
% \begin{verbatim}
% \usepackage[mainfontsize=3.5mm]{gost2-304}
% \end{verbatim}
% шрифты \cs{eskdfont} будут не только определены, но и шрифт текста по умолчанию
% будет изменён на \cs{eskdfont} с |h|=3,5~мм.
%
% Кроме того, при использовании опции |mainfontsize| также корректируются и размеры
% для относительных размеров шрифта \cs{small}, \cs{tiny} и других:
% они также выбираются из допустимого размерного ряда.
%
% \begin{verbatim}
%     \small A123
%     \normalsize A123
%     \large A123 \Large A123 \LARGE A123
%     \huge A \Huge A
% \end{verbatim}
% \DrawChars
%   {
%     \small A123
%     \normalsize A123
%     \large A123 \Large A123 \LARGE A123 \huge A \Huge A
%   }[21mm]
%
% Для изменения размера также следует обратить внимание на макрос
% \cs{eskdfontsize} (\pageref{sec:fontsize}).
%
% \end{documentation}
% \begin{implementation}
% Использование \cs{eskdfont} как основного шрифта по умолчанию и его размер.
%    \begin{macrocode}
    mainfontsize .code:n =
      {
        \clist_if_in:NnTF \c_@@_fontsizes_clist {#1}
          {
            \dim_gset:Nn \g_@@_normalsize_dim {#1}
            \bool_gset_true:N \g_@@_mainfontsize_bool
          }
          { \msg_fatal:nnn { gost2-304 } { invalid-font-size } { #1 } }
      },
%    \end{macrocode}
% \end{implementation}
% \begin{documentation}
%
% \subsection{language}\label{opt:language}
%
% \DescribeOption{language}
% Параметр |language| соответствует параметру |Language|
% макросов пакета \pkg{fontspec}.
% Влияет на использование языкозависимых лигатур.
%
% Например, символы |No.| в русском языке заменяются
% лигатурой №. А в немецком языке порядковый номер как
% раз традиционно записывается символами |No.|, а не
% лигатурой №.
%
% Код
% \begin{verbatim}
% \usepackage[mainfontsize=5mm, language=Russian]
%   {gost2-304}
% \begin{document}
%   No.
% \end{document}
% \end{verbatim}
% даёт No.. А код 
% \begin{verbatim}
% \usepackage[mainfontsize=5mm, language=German]
%   {gost2-304}
% \begin{document}
%   No.
% \end{document}
% \end{verbatim}
% даёт { \addfontfeature{Language=German} No.}.
%
% Локально изменить языковые параметры шрифта можно следующим
% образом:
% \begin{verbatim}
% { \addfontfeature{Language=German} No.}
% \end{verbatim}
%
% Значение по умолчанию - |Russian|.
%
% \end{documentation}
% \begin{implementation}
% Параметр |language| соответствует параметру |Language|
% макросов пакета \pkg{fontspec}.
%    \begin{macrocode}
    language .tl_gset:N = \g_@@_language_tl,
    language .initial:n = Russian,
%    \end{macrocode}
% \end{implementation}
% \begin{documentation}
%
% \subsection{zero}\label{opt:zero}
%
% \DescribeOption{zero}
% Параметр |zero| определяет вариант начертания цифры |0|.
% По умолчанию - |zero=basic|, в соответствии с ГОСТ~2.304.
% Для применения начертания, принятого в среде программистов,
% следует использовать |zero=slashed|.
%
% Отличия видны ниже:
%
% \DrawChars{ 1234567890 \addfontfeature{Numbers=SlashedZero} 0 }
%
% Локально изменить начертание нуля можно следующим образом:
%
% \begin{verbatim}
% { 0 \addfontfeature{Numbers=SlashedZero} 0 }
% \end{verbatim}
%
% \DrawChars{ 0 \addfontfeature{Numbers=SlashedZero} 0 }
%
% \end{documentation}
% \begin{implementation}
% Параметр |zero| определяет начертание цифры |0|.
%    \begin{macrocode}
    zero .choice:,
    zero / basic .code:n =
      { \bool_gset_false:N \g_@@_slashed_zero_bool },
    zero / slashed .code:n =
      { \bool_gset_true:N \g_@@_slashed_zero_bool },
    zero .initial:n = { basic },
%    \end{macrocode}
% \end{implementation}
% \begin{documentation}
%
% \subsection{digit-three}\label{opt:digit-three}
%
% \DescribeOption{digit-three}
% \DescribeMacro{DigitThree}
% Параметр |digit-three| определяет начертание цифры 3.
% По умолчанию - |digit-three=basic|.
% Для применения начертания, существенно отличающегося от буквы З,
% следует использовать |alternative|.
%
% Отличия видны ниже.
% Локально изменить начертание можно следующим образом:
%
% \begin{verbatim}
% { 3 \addfontfeature{DigitThree=alternative} 3 }
% \end{verbatim}
%
% \DrawChars{ 3 \addfontfeature{DigitThree=alternative} 3 }
%
% \end{documentation}
% \begin{implementation}
% Параметр |digit-three| определяет начертание цифры |3|.
%    \begin{macrocode}
    digit-three .choices:nn = { basic, alternative }
      {
        \tl_gset_eq:NN
          \g_@@_digit_three_variant_tl
          \l_keys_choice_tl
      },
    digit-three .initial:n = { basic },
%    \end{macrocode}
% \end{implementation}
% \begin{documentation}
%
% \subsection{romannumeral}\label{opt:romannumeral}
%
% \DescribeOption{romannumeral}
% \DescribeMacro{RomanNumeral}
% Параметр |romannumeral| определяет начертание римских цифр.
% По умолчанию - |romannumeral=gost2-304|.
% При указанном значении опции для отображения римских цифр
% будут использованы специальные Unicode символы, а не 
% близкие по начертанию латинские буквы.
%
% При |romannumeral=tex| для отображения римских цифр
% будут использованы
% близкие по начертанию латинские буквы.
%
% Отличия видны ниже.
% Обратите внимание на различия в расстоянии между символами
% в римских цифрах. При использовании латинских символов расстояния
% не соответствуют требованиям ГОСТ~2.304, именно поэтому значение
% опции |gost2-304| является предпочтительным.
%
% \newcounter{digit}
% \makeatletter
% \DrawChars
%   {
%     \addfontfeature{ RomanNumeral = Off, RomanV = basic }
%     IV VI XII MMXIV
%   }
%
% \DrawChars
%   {
%     \addfontfeature{ RomanNumeral = On, RomanV = basic }
%     \@roman{4}\,\@roman{6}\,\@roman{12}\,\@roman{2014}
%   }
% \makeatother
%
% \end{documentation}
% \begin{implementation}
% Параметр |romannumeral| определяет начертание римских цифр.
%    \begin{macrocode}
    romannumeral .choice:,
    romannumeral / gost2-304 .code:n =
      { \bool_gset_true:N \g_@@_romannumeral_check_bool },
    romannumeral / tex .code:n =
      { \bool_gset_false:N \g_@@_romannumeral_check_bool },
    romannumeral .initial:n = { gost2-304 },
%    \end{macrocode}
% \end{implementation}
% \begin{documentation}
%
% \subsection{roman-V}\label{opt:roman-V}
%
% \DescribeOption{roman-V}
% \DescribeMacro{RomanV}
% Параметр |roman-V| определяет начертание римской цифры 5.
% По умолчанию - |roman-V=basic|.
% Второй вариант значения - |alternative|.
%
% Отличия видны ниже.
%
% Локально изменить начертание можно следующим образом:
%
% \begin{verbatim}
% { \@roman{5}
%   \addfontfeature{Roman-V=alternative} \@roman{5} }
% \end{verbatim}
%
% \makeatletter
% \DrawChars
%   {
%     \addfontfeature{ RomanV = basic }
%     \@roman{5}
%     \addfontfeature{ RomanV = alternative }
%     \@roman{5}
%   }
% \makeatother
%
% \end{documentation}
% \begin{implementation}
% Параметр |roman-V| определяет начертание римской цифры 5.
%    \begin{macrocode}
    roman-V .choices:nn = { basic, alternative, serif }
      { \tl_gset_eq:NN \g_@@_roman_V_variant_tl \l_keys_choice_tl },
    roman-V .initial:n = { basic },
%    \end{macrocode}
% \end{implementation}
% \begin{documentation}
%
% \subsection{fractions}\label{opt:fractions}
%
% \DescribeOption{fractions}
% Параметр |fractions| управляет начертанием 
% неявно заданных inline дробей.
% По умолчанию - |fractions=On|.
%
% Естественно, использование непосредственно математического
% режима \TeX{} предпочтительнее. Поясню на примере.
%
% Локально изменить начертание можно следующим образом:
% \begin{verbatim}
% { 22/35 \addfontfeature{Fractions=On} 22/35 }
% \end{verbatim}
% \DrawChars
%   {
%     \addfontfeature{Fractions=Off} 22/35
%     \addfontfeature{Fractions=On} 22/35
%   }[22mm]
%
% В сравнении с math режимом \TeX:
% \begin{verbatim}
% { 22/35 \( \sfrac{22}{35} \nicefrac{22}{35} \) }
% \end{verbatim}
% \DrawChars{ 22/35 \( \sfrac{22}{35} \nicefrac{22}{35} \) }[22mm]
%
% Как видно, текущая версия пакета \thispkg{} не адаптирует
% макросы |\sfrac| и |\nicefrac|, в результате начертание
% полученных с их использованием дробей не соответствует
% требованиям ГОСТ~2.304.
% Но в последующих версиях пакета использование
% |\sfrac| и |\nicefrac| более предпочтительно.
%
% \end{documentation}
% \begin{implementation}
% Параметр |fractions| управляет начертанием inline дробей.
%    \begin{macrocode}
    fractions .choices:nn = { On, Off }
      { \tl_gset_eq:NN \g_@@_fractions_tl \l_keys_choice_tl },
    fractions .default:n = { On },
    fractions .initial:n = { On },
%    \end{macrocode}
% \end{implementation}
% \begin{documentation}
%
% \subsection{math, no-math}\label{opt:math}
%
% \DescribeOption{math}
% \DescribeOption{no-math}
% |math=true| или просто |math| заменяет математический шрифт
% по умолчанию на шрифт ГОСТ~2.304 типа А.
% |math=false| или |no-math| отключает использование в математическом
% режиме описываемого шрифта.
%
% По умолчанию |math=true|.
%
% \end{documentation}
% \begin{implementation}
% Параметры |math| и |no-math| определяют использование шрифта
% в математическом режиме.
%    \begin{macrocode}
    math .choice:,
    math / true .code:n =
      {
        \bool_gset_true:N \g_@@_math_support_bool
        \PassOptionsToClass {no-math} {fontspec}
      },
    math / false .code:n =
      {
        \bool_gset_false:N \g_@@_math_support_bool
      },
    math .default:n = true,
    math .initial:n = true,
%    \end{macrocode}
% |no-math| = |math=false|
%    \begin{macrocode}
    no-math .meta:n =
      {
        math = false
      },
%    \end{macrocode}
% Служебные опции пакета, управляющие интенсивностью сообщий модуля
% при его использовании.
%
% |quiet| - минимальное количество сообщений
%    \begin{macrocode}
    quiet .code:n =
      {
        \msg_redirect_module:nnn { gost2-304 } { warning } { info }
        \msg_redirect_module:nnn { gost2-304 } { info } { none }
      },
    quiet .meta:n =
      {
        trace = off
      },
%    \end{macrocode}
% |silent| - выводить только ошибки
%    \begin{macrocode}
    silent .code:n =
      {
        \msg_redirect_module:nnn { gost2-304 } { warning } { none }
        \msg_redirect_module:nnn { gost2-304 } { info } { none }
      },
    silent .meta:n =
      {
        trace = off
      },
%    \end{macrocode}
% опция отключения вывода предупреждений
%    \begin{macrocode}
    warnings-off .code:n =
      {
        \clist_map_inline:nn {#1}
          { \msg_redirect_name:nnn { gost2-304 } { ##1 } { none } }
      },
%    \end{macrocode}
% управление выводом отладочных сообщений
%    \begin{macrocode}
    trace .choice:,
    trace / on .code:n = 
      {
        \msg_redirect_module:nnn { gost2-304 } { log } { log }
      },
    trace / debug .code:n =
      {
        \msg_redirect_module:nnn { gost2-304 } { log } { warning }
      },
    trace / off .code:n =
      {
        \msg_redirect_module:nnn { gost2-304 } { log } { none }
      }
  }

\ProcessKeysOptions { gost2-304 }
%    \end{macrocode}
% Подключение необходимых пакетов
%    \begin{macrocode}
\PassOptionsToPackage{T2A}{fontenc}
\PassOptionsToPackage{T1}{fontenc}
\RequirePackage{fontenc}
\RequirePackage{cmap}
\RequirePackage{xecyr}
\RequirePackage{xparse}
\RequirePackage{fontspec}
%    \end{macrocode}
% \end{implementation}
% \begin{documentation}
%
% \section{Функции пакета}
% \label{sec:packageFunctions}
%
% \subsection{Изменение размера шрифта}
% \label{sec:fontsize}
%
% \end{documentation}
% \begin{implementation}
%
% Возвращает размер шрифта в единицах измерения по индексу
% в списке допустимых размеров
% \begin{macro}[aux]{\_@@_fontsizeget:n}
%   \begin{syntax}
%     \cs{_@@_fontsizeget:n}
%       \marg{индекс требуемого размера шрифта в \tn{c_@@_fontsizes_clist}}
%   \end{syntax}
%    \begin{macrocode}
\cs_new_nopar:Nn \_@@_fontsizeget:n
  {
    \clist_item:Nn \c_@@_fontsizes_clist {#1}
  }
%    \end{macrocode}
% \end{macro}
%
% Устанавливает нормальный (\cs{normalsize}) размер используемого
% шрифта. При этом переопределяет и зависимые размеры шрифта
% (\cs{tiny}, \cs{large} и т.п.), используя только допустимые
% размеры.
% \begin{macro}[aux]{\_@@_normalsize_gset:n}
%   \begin{syntax}
%     \cs{_@@_normalsize_gset:n}
%       \marg{требуемый размер с указанием единицы измерения}
%   \end{syntax}
%    \begin{macrocode}
\cs_new_nopar:Nn \_@@_normalsize_gset:n
  {
    \dim_set:Nn \l_tmpa_dim {#1}
    \bool_gset_false:N \g_@@_mainfontsize_bool
    \int_set_eq:NN \l_tmpa_int \c_zero
    \clist_map_inline:Nn \c_@@_fontsizes_clist
      {
        \int_incr:N \l_tmpa_int
        \dim_compare:nNnT \l_tmpa_dim = {##1}
          {
            \bool_gset_true:N \g_@@_mainfontsize_bool
            \clist_map_break:
          }
      }
    \bool_if:NTF \g_@@_mainfontsize_bool
      {
        \int_case:nnTF { \l_tmpa_int }
          {
            { 2 } % 2,5mm
              { \clist_set:Nn \l_tmpa_clist {-1,  0,  0,  0, 0, 1, 2, 3, 4, 5} }
            { 3 } % 3,5mm
              { \clist_set:Nn \l_tmpa_clist {-2, -2, -1, -1, 0, 1, 2, 3, 4, 5} }
            { 4 } % 5,0mm
              { \clist_set:Nn \l_tmpa_clist {-3, -2, -1, -1, 0, 1, 2, 3, 4, 5} }
            { 5 } % 7,0mm
              { \clist_set:Nn \l_tmpa_clist {-3, -2, -1, -1, 0, 1, 2, 3, 4, 5} }
            { 6 } % 10mm
              { \clist_set:Nn \l_tmpa_clist {-2, -2, -1, -1, 0, 1, 2, 3, 4, 4} }
            { 7 } % 14mm
              { \clist_set:Nn \l_tmpa_clist {-2, -2, -1, -1, 0, 1, 2, 3, 3, 3} }
          }
          {
            \clist_map_inline:nn {
              \tiny, \scriptsize, \footnotesize, \small,
              \normalsize,
              \large, \Large, \LARGE, \huge, \Huge
            }
              {
                \clist_pop:NN \l_tmpa_clist \l_tmpb_tl
                \int_set:Nn \l_tmpb_int \l_tmpb_tl
                \dim_gset:cn {g_@@_\cs_to_str:N ##1_dim}
                  {
                    \_@@_fontsizeget:n
                      { \int_eval:n { \l_tmpa_int + \l_tmpb_int } }
                  }
                \DeclareDocumentCommand ##1 {} {%
                  \_@@_setfontsize_h:Nc ##1
                    {g_@@_\cs_to_str:N ##1_dim}
                  \selectfont
                }
                \msg_log:nnx { gost2-304 } { set-font-size } {\cs_to_str:N ##1}
              }
            \normalsize
            \setmainfont { \tl_use:N \c_@@_mainfont_tl }
              [
                % NFSSFamily = \tl_use:N
                %   \c_@@_mainfont_NFSSFamily_tl,
                \tl_use:N \g_@@_mainfont_features_tl
              ]
            \msg_log:nn { gost2-304 } { mainfont }
          }
          {
            \msg_fatal:nnn { gost2-304 } { invalid-mainfontsize } {#1}
          }
      }
      {
        \msg_fatal:nnx { gost2-304 } { invalid-font-size }
          { \dim_to_decimal_in_unit:nn { #1 } {1mm}mm }
      }
  }
\@onlypreamble \_@@_normalsize_gset:n
%    \end{macrocode}
% \end{macro}
% \begin{macro}[aux]{\_@@_normalsize_gset:}
%    \begin{macrocode}
\cs_new_nopar:Nn \_@@_normalsize_gset:
  {
    \_@@_normalsize_gset:n \g_@@_normalsize_dim
  }
\@onlypreamble \_@@_normalsize_gset:
%    \end{macrocode}
% \end{macro}
% \begin{macro}[int]{\_@@_b_from_h:n}
%   \begin{syntax}
%     \cs{_@@_b_from_h:n}
%       \marg{размер шрифта h с указанием единицы измерения}
%   \end{syntax}
% Вычисляет интервал между базовыми линиями |b| из размера шрифта |h|.
% \todo{После подготовки шрифта типа~Б корректно рассчитывать |b| и для
% него.}
%    \begin{macrocode}
\cs_new_nopar:Nn \_@@_b_from_h:n
  {
    \dim_eval:n { #1 * 22 / 14 }
  }
%    \end{macrocode}
% \end{macro}
% \begin{macro}[aux]{\_@@_fontsize_from_h:n}
%   \begin{syntax}
%     \cs{_@@_fontsize_from_h:n}
%       \marg{размер шрифта h с указанием единицы измерения}
%   \end{syntax}
%
% Вычисляет размер шрифта на основе указанного |h|.
%    \begin{macrocode}
\cs_new_nopar:Nn \_@@_fontsize_from_h:n
  { \dim_eval:n { \dim_eval:n{ #1 } * \c_@@_fontscale_tl } }
%    \end{macrocode}
% \end{macro}
% \begin{macro}[aux]{\_@@_fontsize_from_h:Nn}
%   \begin{syntax}
%     \cs{_@@_fontsize_from_h:Nn}
%       \marg{идентификатор переменной (dim)
%         , в которую будет сохранено вычисленное значение h}
%       \marg{размер шрифта h с указанием единицы измерения}
%   \end{syntax}
%
% Вычисляет размер шрифта на основе указанного |h|
% и сохраняет его в переменную, указанную первым аргументом.
%    \begin{macrocode}
\cs_new_nopar:Nn \_@@_fontsize_from_h:Nn
  { \dim_set:Nn #1 { \_@@_fontsize_from_h:n { #2 } } }
%    \end{macrocode}
% \end{macro}
% \begin{macro}[aux]{\_@@_setfontsize_h:Nnn}
%   \begin{syntax}
%     \cs{_@@_setfontsize_h:Nnn}
%       \marg{макрос, который будет переопределён}
%       \marg{размер шрифта h с указанием единицы измерения}
%       \marg{расстояние между базовыми линиями b с указанием единицы измерения}
%   \end{syntax}
%
% Переопределяет макрос для изменения размера шрифта на основе указанного |h|
% (например |\tiny|).
%    \begin{macrocode}
\cs_new_nopar:Nn \_@@_setfontsize_h:Nnn
  {
    \@setfontsize{#1}{\_@@_fontsize_from_h:n{#2}}{#3}
    \ignorespaces
  }
\cs_new_nopar:Nn \_@@_setfontsize_h:Nn
  {
    \_@@_setfontsize_h:Nnn {#1}{#2}{ \_@@_b_from_h:n {#2} }
  }
\cs_generate_variant:Nn \_@@_setfontsize_h:Nn { Nc }
%    \end{macrocode}
% \end{macro}
% \end{implementation}
% \begin{documentation}
%
% \DescribeMacro{\eskdfontsize}
% \DescribeMacro{\eskdfont_fontsize_h:nn}
% \DescribeMacro{\eskdfont_fontsize_h:n}
% В дополнение к опции |mainfontsize| (\pageref{opt:mainfontsize})
% данный пакет экспортирует макрос
% \cs{eskdfontsize}\marg{размер H шрифта}\oarg{расстояние между строками b},
% позволяющий изменять размер основного шрифта в тексте документа.
%
% В отличии от \cs{fontsize} устанавливает не кегль шрифта,
% а |h| (ex) размер шрифта.
%
% \begin{verbatim}
% {
%   \eskdfontsize{14mm} \selectfont
%   A123
%   \eskdfontsize{10mm} \selectfont
%   A123
%   \eskdfontsize{5mm} \selectfont
%   A123
% }
% \end{verbatim}
% \DrawChars
%   {
%     \eskdfontsize{14mm} \selectfont
%     A123
%     \eskdfontsize{10mm} \selectfont
%     A123
%     \eskdfontsize{5mm} \selectfont
%     A123
%   }
%
% \end{documentation}
% \begin{implementation}
% \begin{macro}[aux]{\eskdfont_fontsize_h:nn}
%   \begin{syntax}
%     \cs{\eskdfont_fontsize_h:nn}
%       \marg{размер шрифта h с указанием единицы измерения}
%       \marg{расстояние между базовыми линиями b с указанием единицы измерения}
%   \end{syntax}
%
% Устанавливает размер текущего шрифта на основе указанного |h|.
%    \begin{macrocode}
\cs_new_nopar:Nn \eskdfont_fontsize_h:nn
  {
    \fontsize{\_@@_fontsize_from_h:n{#1}}{#2}
    \ignorespaces
  }
\cs_new_nopar:Nn \eskdfont_fontsize_h:n
  {
    \eskdfont_fontsize_h:nn {#1}{ \_@@_b_from_h:n {#1} }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\eskdfontsize}
%   \begin{syntax}
%     \cs{eskdfontsize}
%       \marg{размер шрифта h с указанием единицы измерения}
%       \oarg{расстояние между базовыми линиями b с указанием единицы измерения}
%   \end{syntax}
%
% В отличии от \cs{fontsize} устанавливает не кегль шрифта, а |h| (ex) параметр шрифта.
%    \begin{macrocode}
\DeclareDocumentCommand \eskdfontsize {m o}
  {
    \IfNoValueTF{#2}
      { \eskdfont_fontsize_h:n {#1} }
      { \eskdfont_fontsize_h:nn {#1}{#2} }
    \ignorespaces
  }
%    \end{macrocode}
% \end{macro}
%
% Наименования файлов шрифтов ГОСТ 2.304.
%    \begin{macrocode}
\tl_const:Nn \c_@@_type_A_tl { GOST2.304-81TypeA-Regular }
\tl_const:Nn \c_@@_type_A_slanted_tl { GOST2.304-81TypeA-Slanted }
\tl_const:Nn \c_@@_type_B_tl { GOST2.304-81TypeA-Regular }
\tl_const:Nn \c_@@_type_B_slanted_tl { GOST2.304-81TypeA-Slanted }
%    \end{macrocode}
%
% \begin{variable}[aux]{\g_@@_type_A_scale_fp, \g_@@_type_B_scale_fp}
%
% Переменные, содержащие масштабные коэффициенты для шрифтов.
% Масштаб для используемых шрифтов вычисляется автоматически далее.
% \todo{Убрать расчёт масштаба после подготовки шрифта типа~Б.}
%    \begin{macrocode}
\fp_new:N \g_@@_type_A_scale_fp
\fp_gset_eq:NN \g_@@_type_A_scale_fp \c_one_fp
\fp_new:N \g_@@_type_B_scale_fp
\fp_gset_eq:NN \g_@@_type_B_scale_fp \c_one_fp
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[aux]
%   {
%     \l_@@_type_A_features_tl,
%     \l_@@_type_A_fontadjustment_tl,
%     \l_@@_type_B_features_tl,
%     \l_@@_type_B_fontadjustment_tl
%   }
%
% Параметры шрифтов ГОСТ 2.304.
%    \begin{macrocode}
\tl_new:N \l_@@_type_A_features_tl
\tl_new:N \l_@@_type_A_fontadjustment_tl
\tl_set:Nn \l_@@_type_A_features_tl
  {
    Font = \tl_use:N \c_@@_type_A_tl
    ,Scale = \fp_to_decimal:N \g_@@_type_A_scale_fp
    ,FontAdjustment = { \tl_use:N \l_@@_type_A_fontadjustment_tl }
  }
\tl_set:Nn \l_@@_type_A_slanted_features_tl
  {
    Font = \tl_use:N \c_@@_type_A_slanted_tl
    ,Scale = \fp_to_decimal:N \g_@@_type_A_scale_fp
    ,FontAdjustment = { \tl_use:N \l_@@_type_A_fontadjustment_tl }
  }
\tl_new:N \l_@@_type_B_features_tl
\tl_new:N \l_@@_type_B_fontadjustment_tl
\tl_set:Nn \l_@@_type_B_features_tl
  {
    Font = \tl_use:N \c_@@_type_B_tl
    ,Scale = \fp_to_decimal:N \g_@@_type_B_scale_fp
    ,FontAdjustment = { \tl_use:N \l_@@_type_B_fontadjustment_tl }
  }
\tl_set:Nn \l_@@_type_B_slanted_features_tl
  {
    Font = \tl_use:N \c_@@_type_B_slanted_tl
    ,Scale = \fp_to_decimal:N \g_@@_type_B_scale_fp
    ,FontAdjustment = { \tl_use:N \l_@@_type_B_fontadjustment_tl }
  }
%    \end{macrocode}
% \end{variable}
%
% Определяем свойства шрифтов.
% \begin{macro}{DigitThree}
% Свойство |DigitThree| определяет начертание цифры 3.
%    \begin{macrocode}
\newopentypefeature { DigitThree } { alternative } { +cv01 }
\newopentypefeature { DigitThree } { basic } { -cv01 }
%    \end{macrocode}
% \end{macro}
% \begin{macro}{RomanNumeral}
% Свойство |RomanNumeral| определяет начертание римских цифр.
%    \begin{macrocode}
\newopentypefeature { RomanNumeral } { On } { +cv03 }
\newopentypefeature { RomanNumeral } { Off } { -cv03 }
%    \end{macrocode}
% \end{macro}
% \begin{macro}{RomanV}
% Свойство |RomanV| определяет начертание римской V.
%    \begin{macrocode}
\newopentypefeature { RomanV } { alternative } { +cv02 }
\newopentypefeature { RomanV } { serif } { +cv02 }
\newopentypefeature { RomanV } { basic } { -cv02 }
%    \end{macrocode}
% \end{macro}
%
% \begin{variable}[int]{\g_@@_font_features_tl, \g_@@_mainfont_features_tl}
% Определяем |fontspec| параметры шрифта |eskdfont|.
%    \begin{macrocode}
\tl_new:N \g_@@_mainfont_features_tl
\tl_new:N \g_@@_font_features_tl
\tl_gset:Nn \g_@@_font_features_tl
  {
    Path = 
    ,Extension = .ttf
    ,UprightFont = \tl_use:N \c_@@_type_A_tl
    ,OpticalSize = 0
    ,Language = \tl_use:N \g_@@_language_tl
    ,Mapping = tex-text
    ,Ligatures = { Common, Required, TeX }
    ,Kerning = On
    ,Numbers =
      {
        \bool_if:NT \g_@@_slashed_zero_bool { SlashedZero }
      }
    ,DigitThree = \tl_use:N \g_@@_digit_three_variant_tl
    ,RomanV = \tl_use:N \g_@@_roman_V_variant_tl
    ,Fractions = \g_@@_fractions_tl
    ,UprightFeatures =
      {
        \tl_use:N \l_@@_type_A_features_tl
      }
    ,SlantedFeatures =
      {
        \tl_use:N \l_@@_type_A_slanted_features_tl
      }
    ,BoldFeatures =
      {
        \tl_use:N \l_@@_type_B_features_tl
      }
    ,BoldSlantedFeatures =
      {
        \tl_use:N \l_@@_type_B_slanted_features_tl
      }
  }
%    \end{macrocode}
% \end{variable}
%
% Определяем масштаб для шрифта.
% Для шрифта типа А определять масштаб нет необходимости,
% соотношение кегля (|em|, параметр шрифта |b|) к высоте строчных
% букв (|ex|, параметр шрифта |c|) известно заранее.
%
% Расчёт масштаба оставлен пока только для шрифта типа Б, потому как
% он получен ``утолщением'' True Type шрифта типа А. По факту разработки
% самостоятельного True Type шрифта типа Б расчёт масштаба можно будет
% полностью убрать.
% \todo{Убрать расчёт масштаба после подготовки шрифта типа~Б.}
%
% \begin{eqnarray*}
%   1 \text{~ex} & = & c\\
%   h & = & \left[ \begin{matrix}
%       \frac{14}{10} \cdot c & \text{для шрифта типа А}\\
%       \frac{10}{7} \cdot c & \text{для шрифта типа Б}\\
%   \end{matrix} \right.\\
%   1 \text{~em} & = & \text{кегль шрифта (\cs{f@size})}\\
%   \frac{\text{\cs{f@size}}}{h} & = & \frac{1 \text{~em}}{ \frac{14}{10} \text{~ex}} = \frac{10 \text{~em}}{14 \text{~ex}} \\
% \end{eqnarray*}
%
%    \begin{macrocode}
\group_begin:
  \fontspec { \tl_use:N \c_@@_mainfont_tl }
    [
      % NFSSFamily = \tl_use:N \c_@@_mainfont_NFSSFamily_tl,
      \tl_use:N \g_@@_font_features_tl
    ]
  \fontsize { 100pt } { 100pt } \selectfont
  \dim_set:Nn \l_tmpa_dim { 1pt * \dim_ratio:nn { 10em } { 14ex } }
  \int_set:Nn \l_tmpa_int \l_tmpa_dim
  \tl_const:Nx \c_@@_fontscale_tl { \int_use:N \l_tmpa_int / 65536 }

  \dim_set:Nn \l_tmpa_dim {1ex}
  \bfseries
  \fp_gset:Nn \g_@@_type_B_scale_fp
    { \dim_to_fp:n { 1pt * \dim_ratio:nn \l_tmpa_dim { 1ex } } }
\group_end:
%    \end{macrocode}
%
% Указываем допустимые размеры шрифтов в свойствах шрифта.
%
% В соответствии с требованиями п.~2.2 ГОСТ 2.304 минимальный размер шрифта
% (1,8~мм) допустим только для шрифта типа~Б. Для того, чтобы и для шрифта
% типа А высотой 2,5~мм можно было использовать индексы, вводим размер
% 1,8~мм как допустимый для шрифта типа~А, но при этом при использовании
% данного размера принудительно неявно будем использовать шрифт типа~Б.
%    \begin{macrocode}
\tl_new:N \l_@@_SizeFeatures_tl
\seq_set_from_clist:NN \l_tmpa_seq \c_@@_fontsizes_clist
\seq_pop:NN \l_tmpa_seq \l_tmpa_tl
\seq_clear:N \l_tmpb_seq
\tl_clear:N \l_tmpb_tl
%    \end{macrocode}
% Для первого размера (1,8~мм) указываем принудительно свойства шрифта типа~Б.
% Но только для шрифта типа~А. 
%    \begin{macrocode}
\seq_push:Nn \l_tmpb_seq
  { {
    Size = \dim_to_decimal:n {
      \_@@_fontsize_from_h:n { \tl_use:N \l_tmpa_tl }
    }
    , \tl_use:N \l_tmpb_tl
  } }
%    \end{macrocode}
% Добавляем остальные допустимые размеры.
%    \begin{macrocode}
\seq_map_inline:Nn \l_tmpa_seq
  {
    \seq_put_right:Nn \l_tmpb_seq
      { {
        Size = \dim_to_decimal:n { \_@@_fontsize_from_h:n { #1 } } 
      } }
  }
%    \end{macrocode}
% Формируем строку параметров с допустимыми размерами для \cs{fontspec}.
%    \begin{macrocode}
\tl_set:Nx \l_@@_SizeFeatures_tl
  { SizeFeatures={ \seq_use:Nn \l_tmpb_seq {, } } }
%    \end{macrocode}
%
% Добавляем подготовленную информацию о допустимых размерах
% шрифта в параметры шрифта.
%
% Для первого размера (1,8~мм) шрифта типа~А принудительно применяем
% параметры шрифта типа~Б (см. \cs{l_tmpb_tl}).
%    \begin{macrocode}
\tl_set:Nx \l_tmpb_tl \l_@@_type_B_features_tl
\tl_put_right:Nx \l_@@_type_A_features_tl
  { ,\l_@@_SizeFeatures_tl }
\tl_set:Nx \l_tmpb_tl \l_@@_type_B_slanted_features_tl
\tl_put_right:Nx \l_@@_type_A_slanted_features_tl
  { ,\l_@@_SizeFeatures_tl }
%    \end{macrocode}
% Для шрифта типа~Б таких ухищрений не требуется. Поэтому параметры,
% специфичные для первого размера (\cs{l_tmpb_tl}), очищаем.
%    \begin{macrocode}
\tl_clear:N \l_tmpb_tl
\tl_put_right:Nx \l_@@_type_B_features_tl
  { ,\l_@@_SizeFeatures_tl }
\tl_put_right:Nx \l_@@_type_B_slanted_features_tl
  { ,\l_@@_SizeFeatures_tl }
%    \end{macrocode}
%
% Определяем новое семейство шрифтов \cs{eskdfont}.
%
% Пока указание |NFSSFamily| отключено.
% Ясно, что для математических шрифтов указывать большого смысла нет,
% но для шрифта текста - почему бы и нет?
% \todo{Использовать ли |NFSSFamily| для \cs{eskdfont}?}
%    \begin{macrocode}
\tl_gset:Nx \g_@@_mainfont_features_tl
  { \tl_use:N \g_@@_font_features_tl }
\newfontfamily \eskdfont
  { \tl_use:N \c_@@_mainfont_tl }
  [
    % NFSSFamily = \tl_use:N \c_@@_mainfont_NFSSFamily_tl,
    \tl_use:N \g_@@_font_features_tl
  ]
%    \end{macrocode}
%
% Устанавливаем размер шрифта в случае указания опции
% |mainfontsize|\ref{opt:mainfontsize}.
%    \begin{macrocode}
\bool_if:NT \g_@@_mainfontsize_bool
  { \_@@_normalsize_gset: }
%    \end{macrocode}
% \end{implementation}
% \begin{documentation}
%
% \subsection{Проверка используемого шрифта}
% \label{sec:if_eskdfont}
%
% \DescribeMacro{\eskdfont_if_eskdfont:}
% В ряде случаев необходимо выполнить те или иные действия в зависимости от
% используемого в настоящий момент шрифта.
% Предикат \cs{eskdfont_if_eskdfont:} решает именно эту задачу.
%
% \begin{verbatim}
% \eskdfont_if_eskdfont:TF
%   {да, шрифт ГОСТ 2.304.}
%   {нет, шрифт не ГОСТ 2.304.}
% \end{verbatim}
%
% Результат:
% \ExplSyntaxOn
% \eskdfont_if_eskdfont:TF
%   {да,~ шрифт~ ГОСТ~2.304.}
%   {нет,~ шрифт~ не~ ГОСТ~2.304.}
% \ExplSyntaxOff
%
% \end{documentation}
% \begin{implementation}
% \begin{macro}{\eskdfont_if_eskdfont:}
%
% Предикат, является ли текущий шрифт шрифтом ГОСТ 2.304-81.
% \pkg{fontspec} генерирует имена семейств шрифтов вида |eskdfont(2)|.
%    \begin{macrocode}
\cs_generate_variant:Nn \use:nnn {NVV}
\prg_new_conditional:Nnn \eskdfont_if_eskdfont: { p, T, F, TF }
  {
    \tl_if_eq:NNTF \f@family \c_@@_mainfont_tl
      \prg_return_true:
      {
        \group_begin:
          \tl_set:Nf \l_tmpa_tl
            {
              \use:NVV \@@_if_eskdfont_auxi:w
                \f@family
                \c_@@_mainfont_test_tl
            }
          \tl_if_eq:NNTF \c_@@_mainfont_test_tl \l_tmpa_tl
            {
              \group_end:
              \prg_return_true:
            }
            {
              \group_end:
              \prg_return_false:
            }
      }
  }
\tl_const:Nx \c_@@_mainfont_test_tl { \c_@@_mainfont_tl() }
\cs_generate_variant:Nn \use:nnn {NNx}
\use:NNx
  \cs_new_nopar:Npn \@@_if_eskdfont_auxi:w { ##1 \c_@@_mainfont_tl (##2) }
    { #1 }
%    \end{macrocode}
% \end{macro}
%
% \todo{Изменить обработку |RomanNumeral|}
% Опционально активируем замену глифов для латинских букв,
% отражающих римские цифры, на специальные глифы римских цифр.
% Только заглавные римские цифры, как предусмотрено ГОСТ 2.304
% \begin{macro}[int]{\eskdfont_int_to_Roman:n, \eskdfont_int_to_roman:n}
%    \begin{macrocode}
\cs_new_nopar:Nn \eskdfont_int_to_Roman:n
  {
    \group_begin:
    \eskdfont_if_eskdfont:T { \addfontfeature{ RomanNumeral = On } }
    \int_to_Roman:n {#1}
    \group_end:
  }
\cs_new_nopar:Nn \eskdfont_int_to_roman:n
  {
    \group_begin:
    \eskdfont_if_eskdfont:T { \addfontfeature{ RomanNumeral = On } }
    \int_to_roman:n {#1}
    \group_end:
  }
\bool_if:NT \g_@@_romannumeral_check_bool
  {
    \cs_set_eq:NN \@roman \eskdfont_int_to_roman:n
    \cs_set_eq:NN \@Roman \eskdfont_int_to_Roman:n
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\_@@_declare_math_sizes:nnnn}
%    \begin{macrocode}
\cs_new:Nn \_@@_declare_math_sizes:nnnn
  {
    \DeclareMathSizes
      { \dim_to_decimal:n {#1} }
      { \dim_to_decimal:n {#2} }
      { \dim_to_decimal:n {#3} }
      { \dim_to_decimal:n {#4} }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\_@@_declare_math_sizes:}
% Данный макрос определяет размеры верхних и нижних индексов,
% а также индексов для индексов, для каждого допустимого размера
% шрифта (см. описание \cs{DeclareMathSizes}).
%    \begin{macrocode}
\cs_new:Nn \_@@_declare_math_sizes:
  {
    \dim_new:N \l_@@_mathscriptsize_dim
    \dim_new:N \l_@@_mathsubscriptsize_dim
    \clist_set_eq:NN
      \l_tmpa_clist \c_@@_fontsizes_clist
    \clist_pop:NN \l_tmpa_clist \l_tmpa_tl
    \_@@_fontsize_from_h:Nn
      \l_@@_mathscriptsize_dim \l_tmpa_tl
    \dim_set_eq:NN \l_@@_mathsubscriptsize_dim
      \l_@@_mathscriptsize_dim
    \clist_map_inline:Nn \l_tmpa_clist
      {
        \_@@_fontsize_from_h:Nn \l_tmpa_dim {##1}
        \_@@_declare_math_sizes:nnnn
          \l_tmpa_dim
          \l_tmpa_dim
          \l_@@_mathscriptsize_dim
          \l_@@_mathsubscriptsize_dim
        \dim_set_eq:NN
          \l_@@_mathsubscriptsize_dim
          \l_@@_mathscriptsize_dim
        \dim_set_eq:NN
          \l_@@_mathscriptsize_dim
          \l_tmpa_dim
      }
  }
%    \end{macrocode}
% \end{macro}
%
% Собственно определяем допустимые размеры индексов,
% если опция |math| активна.
% \todo{Размеры индексов математического шрифта
% необходимо определять только при версии математики
% |eskd|. При изменении версии математики необходимо
% восстанавливать размеры индексов.}
%    \begin{macrocode}
\bool_if:NT \g_@@_math_support_bool
  {
    \_@@_declare_math_sizes:
  }
%    \end{macrocode}
%
% \begin{macro}[int]{\_@@_math_symbol_declare:}
% Обёртка для \cs{DeclareMathSymbol}.
% \todo{Сейчас не исползую. Стоит убрать?}
%    \begin{macrocode}
\cs_new:Nn \_@@_math_symbol_declare:nNnn
  {
    \DeclareMathSymbol {#1} {#2} {#3} {#4}
    \ignorespaces
  }
\cs_generate_variant:Nn \_@@_math_symbol_declare:nNnn { nNnx }
\cs_generate_variant:Nn \_@@_math_symbol_declare:nNnn { xNnx }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\_@@_mathfont_family:n}
% Формирует идентификатор семейства математических шрифтов
% для конкретного вида математических символов.
%    \begin{macrocode}
\cs_new_nopar:Nn \_@@_mathfont_family:n
  {
    \tl_to_str:N \c_@@_mathfont_NFSSFamily_tl #1
  }
%    \end{macrocode}
% \end{macro}
%
% Определяем свою версию математики (набор математических шрифтов и символов).
%    \begin{macrocode}
\DeclareMathVersion \c_@@_math_version_tl
%    \end{macrocode}
%
% \begin{macro}[int]{\_@@_set_symbol_font:nnnnn}
%   \begin{syntax}
%     \cs{_@@_set_symbol_font:nnnnn}
%       \marg{вид математических символов (|letters|, |operators| и прочие)}
%       \marg{определяет особенности начертания шрифта (\cs{mddefault} и другие)}
%       \marg{определяет особенности начертания шрифта (\cs{sldefault} и другие)}
%       \marg{макросы дополнительной настройки шрифта типа А}
%       \marg{макросы дополнительной настройки шрифта типа Б}
%   \end{syntax}
% Обёртка для \cs{SetSymbolFont}.
%    \begin{macrocode}
\cs_new_nopar:Nn \_@@_set_symbol_font:nnn
  {
    \_@@_set_symbol_font:nnnnn {#1} {#2} {#3} {} {}
  }
\cs_new_nopar:Nn \_@@_set_symbol_font:nnnnn
  {
%    \end{macrocode}
%   hack - меняем масштабы шрифтов, чтобы внутреннее имя шрифта отличалось от других,
%   и это шрифт мог иметь отличный от других набор команд FontAdjustment.
%   \todo{Применять этот хак нужно только в случае, когда |FontAdjustment| указаны.}
%    \begin{macrocode}
    \fp_gadd:Nn \g_@@_type_A_scale_fp {0.00001}
    \fp_gadd:Nn \g_@@_type_B_scale_fp {0.00001}
    \tl_set:Nn \l_@@_type_A_fontadjustment_tl {#4}
    \tl_set:Nn \l_@@_type_B_fontadjustment_tl {#5}
    \fontspec_set_family:cxV { g_@@_math_symbol_font_ #1 }
      {
        NFSSFamily = \_@@_mathfont_family:n {#1},
        \tl_use:N \g_@@_font_features_tl
      }
      \c_@@_mathfont_tl
    \SetSymbolFont
      {#1}
      \c_@@_math_version_tl
      { \tl_use:N \g_fontspec_encoding_tl }
      { \_@@_mathfont_family:n {#1} }
      {#2}
      {#3}
  }
\cs_generate_variant:Nn \fontspec_set_family:cnn { cxV }
%    \end{macrocode}
% \end{macro}
%
% Назначаем шрифты с указанием параметров их начертания
% для видов математических символов и операторов.
%    \begin{macrocode}
\_@@_set_symbol_font:nnn {operators} \mddefault \updefault
\_@@_set_symbol_font:nnn {letters}   \mddefault \sldefault
%    \end{macrocode}
%
% Планируем отложенные действия после преамбулы документа.
%    \begin{macrocode}
\AtBeginDocument
  {
    \bool_if:NT \g_@@_math_support_bool
      { \mathversion \c_@@_math_version_tl }
  }
%    \end{macrocode}
%    \begin{macrocode}
\ExplSyntaxOff
%    \end{macrocode}
% \iffalse
%</package>
% \fi
%
% \end{implementation}
%
% \StopEventually{}
%
% \Finale
\endinput